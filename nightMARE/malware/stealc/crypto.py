# coding: utf-8


def decrypt_string(string: bytes, key: bytes) -> bytes:
    """
    This function implements custom rc4 decryption function used in Stealc.
    Within this implementation, the algo only performs XOR if byte and
    keystream_byte are not equal.
    """
    SBOX = list(range(256))
    key_length = len(key)
    plaintext = bytearray(string)
    j = 0

    for i in range(256):
        j = (j + SBOX[i] + key[i % key_length]) % 256
        SBOX[i], SBOX[j] = SBOX[j], SBOX[i]

    i = j = 0
    for idx, byte in enumerate(string):
        i = (i + 1) % 256
        j = (j + SBOX[i]) % 256
        SBOX[i], SBOX[j] = SBOX[j], SBOX[i]
        keystream_byte = SBOX[(SBOX[i] + SBOX[j]) % 256]
        if byte != keystream_byte:  # Only XOR if byte and keystream_byte are not equal
            plaintext[idx] = byte ^ keystream_byte

    return bytes(plaintext)
