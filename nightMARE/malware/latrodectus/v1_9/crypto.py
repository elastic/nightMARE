# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. Licensed under the Elastic License;
# you may not use this file except in compliance with the Elastic License.

# coding: utf-8

from Crypto.Cipher import AES
from Crypto.Util import Counter


def decrypt_string(key: bytes, iv: bytes, encrypted_string: bytes) -> bytes:
    """
    Decrypts an encrypted string using AES in CTR mode.

    :param key: The AES key to use for decryption.
    :param iv: The initialization vector (IV) for AES CTR mode.
    :param encrypted_string: The string to be decrypted.
    :return: The decrypted string as bytes.
    """

    iv_int = int.from_bytes(iv, byteorder="big")
    ctr = Counter.new(128, initial_value=iv_int)
    return AES.new(key, AES.MODE_CTR, counter=ctr).decrypt(encrypted_string)
