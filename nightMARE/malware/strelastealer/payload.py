# coding: "utf-8"


from nightMARE.core import bits
from nightMARE.core import cast

from nightMARE.analysis import reversing

KEY_OFFSET = 4
KEY_SIZE = 1024


def extract_configuration(binary: bytes) -> bytes:
    """
    This function extracts StrelaStealer from packer code and returns the decrypted
    StrelaStealer executable.

    :param file: The bytes of the file being extracted
    :return: Unpacked StrelaStealer executable
    :raises RuntimeError: If the binary cannot be parsed or the .data section is not found
    """
    r2 = reversing.Radare2.load(binary)
    if not (data_section := r2.get_section(".data")):
        raise RuntimeError(".data section not found")

    payload_size = cast.u32(data_section[:KEY_OFFSET])
    key = data_section[KEY_OFFSET : KEY_OFFSET + KEY_SIZE]
    payload = data_section[KEY_OFFSET + KEY_SIZE : KEY_OFFSET + KEY_SIZE + payload_size]

    return bits.xor(payload, key)
